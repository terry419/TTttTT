1. 시스템 구성요소 상세 명세
1.1. MonsterController.cs (엔진)
역할: 몬스터 게임 오브젝트에 부착되어, AI의 실제 행동을 실행하는 단일 스크립트.

주요 상태 변수:

playerTransform (Transform): 추적할 플레이어의 위치 정보.

monsterData (MonsterDataSO): 자신의 모든 행동과 능력치가 정의된 설명서.

currentBehavior (MonsterBehavior): 현재 실행 중인 행동 부품.

rb (Rigidbody2D): 물리적 이동을 위한 컴포넌트 참조.

stats (MonsterStats): 자신의 현재 능력치 컴포넌트 참조.

핵심 기능:

Initialize(): monsterData를 기반으로 currentBehavior를 '초기 행동'으로 설정.

Update()/FixedUpdate(): currentBehavior의 Execute() 함수를 매 프레임 호출.

ChangeBehavior(newBehavior): currentBehavior를 newBehavior로 교체.

ExecuteChaseMovement(): 플레이어 방향으로 이동시키는 기능.

ExecuteFleeMovement(): 플레이어 반대 방향으로 이동시키는 기능.

1.2. MonsterDataSO.cs (조립 설명서)
역할: 몬스터 한 종류의 모든 데이터를 담는 ScriptableObject 에셋.

주요 명세:

baseStats (BaseStats): 체력, 공격력 등 기본 능력치.

initialBehavior (MonsterBehavior): 몬스터가 처음 스폰되었을 때 시작할 행동 부품 에셋.

behaviors (List<MonsterBehavior>): 이 몬스터가 사용할 수 있는 모든 행동 부품 에셋들의 목록.

1.3. Transition.cs (연결 규칙)
역할: "A 행동"에서 "B 행동"으로 넘어가는 단일 규칙을 정의.

주요 명세:

decision (Decision): 전환 여부를 판단할 '결정' 부품 에셋.

nextBehavior (MonsterBehavior): decision의 결과가 '참'일 경우, 다음으로 전환될 '행동' 부품 에셋.

1.4. MonsterBehavior.cs (추상 행동 부품 - 설계도)
역할: 모든 '행동' 부품이 반드시 따라야 하는 기본 구조.

주요 명세:

transitions (List<Transition>): 이 행동이 다른 행동으로 전환될 수 있는 '연결 규칙' 목록.

Execute(MonsterController monster): 이 행동이 활성화된 동안 매 프레임 수행할 구체적인 동작.

1.5. Decision.cs (추상 결정 부품 - 설계도)
역할: 모든 '결정' 부품이 반드시 따라야 하는 기본 구조.

주요 명세:

Decide(MonsterController monster): '참' 또는 '거짓'을 반환하여 행동 전환 여부를 결정.

2. 공용 행동 부품 (Behavior) 상세 명세
2.1. ChaseBehavior
에셋 메뉴 경로: Monster AI/Behaviors/Chase

기능 설명: 대상을 향해 이동합니다.

실행 로직: monster.ExecuteChaseMovement()를 호출한 뒤, CheckTransitions()를 호출합니다.

Inspector 설정 변수: 없음.

2.2. FleeBehavior
에셋 메뉴 경로: Monster AI/Behaviors/Flee

기능 설명: 대상으로부터 멀어지는 방향으로 이동합니다.

실행 로직: monster.ExecuteFleeMovement()를 호출한 뒤, CheckTransitions()를 호출합니다.

Inspector 설정 변수: 없음.

2.3. ChargeBehavior
에셋 메뉴 경로: Monster AI/Behaviors/Charge

기능 설명: 여러 단계에 걸쳐 돌진 공격을 수행합니다.

실행 로직:

Aiming 단계: aimingDuration 동안 제자리에 멈춥니다. 시간이 다 되면 'ChargeWindup' 단계로 넘어갑니다.

ChargeWindup 단계: windupDuration 동안 플레이어의 예측 위치를 향해 windupSpeedMultiplier 속도로 느리게 이동하며 최종 돌진 방향을 확정합니다. 시간이 다 되면 'Charging' 단계로 넘어갑니다.

Charging 단계: 확정된 방향으로 chargeSpeedMultiplier 속도로 chargeDistance 만큼 직진합니다. 목표 거리에 도달하면 CheckTransitions()를 호출합니다.

Inspector 설정 변수:

aimingDuration (float): 멈춰서 대기하는 시간 (초).

windupDuration (float): 방향을 조절하며 느리게 움직이는 시간 (초).

windupSpeedMultiplier (float): 방향 조절 시의 속도 배율.

chargeSpeedMultiplier (float): 실제 돌진 시의 속도 배율.

chargePlayerPredictionFactor (float): 플레이어 이동 예측 계수 (0~1).

chargeDistance (float): 최대 돌진 거리.

chargeExhaustionEffect (StatusEffectDataSO): 돌진 후 자신에게 적용할 '탈진' 상태이상 에셋.

2.4. SkirmishBehavior
에셋 메뉴 경로: Monster AI/Behaviors/Skirmish

기능 설명: 대상과 일정 거리를 유지합니다.

실행 로직: 플레이어와의 거리를 계산하여, tooCloseDistance보다 가까우면 후퇴하고, tooFarDistance보다 멀면 접근합니다. 그 사이에서는 정지합니다. 이후 CheckTransitions()를 호출합니다.

Inspector 설정 변수:

tooCloseDistance (float): 후퇴를 시작하는 최소 거리.

tooFarDistance (float): 접근을 시작하는 최대 거리.

2.5. SummonBehavior
에셋 메뉴 경로: Monster AI/Behaviors/Summon

기능 설명: castTime 동안 제자리에서 멈춘 후, 하수인을 소환합니다.

실행 로직: castTime이 경과하면 minionToSummon 데이터를 사용하여 summonCount만큼 하수인을 스폰합니다. 스폰이 끝나면 CheckTransitions()를 호출합니다.

Inspector 설정 변수:

minionToSummon (MonsterDataSO): 소환할 하수인 몬스터의 데이터 에셋.

summonCount (int): 한 번에 소환할 하수인 수.

castTime (float): 소환 동작 시간 (초).

3. 공용 결정 부품 (Decision) 상세 명세
3.1. PlayerInRangeDecision
에셋 메뉴 경로: Monster AI/Decisions/Player In Range

기능 설명: 플레이어가 지정된 범위 안에 있는지 판단합니다.

판단 로직: (플레이어와의 거리 < range)가 참이면 '참'을 반환합니다.

Inspector 설정 변수:

range (float): 판단 기준이 되는 거리.

negate (bool): 체크 시, 결과를 반전시킵니다 (범위 '밖'에 있으면 '참').

3.2. TimerDecision
에셋 메뉴 경로: Monster AI/Decisions/Timer

기능 설명: 현재 행동을 시작한 후 지정된 시간이 경과했는지 판단합니다.

판단 로직: (현재 행동 경과 시간 >= duration)이 참이면 '참'을 반환합니다.

Inspector 설정 변수:

duration (float): 판단 기준이 되는 시간 (초).

3.3. CooldownDecision
에셋 메뉴 경로: Monster AI/Decisions/Cooldown

기능 설명: 특정 행동의 글로벌 쿨타임이 완료되었는지 판단합니다.

판단 로직: (마지막 사용 후 경과 시간 >= cooldown)이 참이면 '참'을 반환하고 타이머를 리셋합니다.

Inspector 설정 변수:

cooldown (float): 쿨타임 시간 (초).

4. 최종 조립 명세서: '지옥불 어미'
4.1. 필요 부품 에셋 생성

PatrolBehavior 에셋 1개 (Behavior_Matriarch_Patrol)

SkirmishBehavior 에셋 1개 (Behavior_Matriarch_Skirmish)

SummonBehavior 에셋 1개 (Behavior_Matriarch_Summon)

PlayerInRangeDecision 에셋 1개 (Decision_Matriarch_Detect)

CooldownDecision 에셋 1개 (Decision_Matriarch_SummonCD)

4.2. 부품별 설정값

Decision_Matriarch_Detect 에셋: Range = 20

Decision_Matriarch_SummonCD 에셋: Cooldown = 8

Behavior_Matriarch_Skirmish 에셋: Too Close = 7, Too Far = 15

Behavior_Matriarch_Summon 에셋: Minion To Summon = (임프 몬스터 데이터), Summon Count = 3, Cast Time = 1.5

4.3. 행동 전환 조립 (Inspector)

Behavior_Matriarch_Patrol 에셋 설정:

Transitions 리스트에 항목 1개 추가.

Decision: Decision_Matriarch_Detect 에셋 연결.

Next Behavior: Behavior_Matriarch_Skirmish 에셋 연결.

Behavior_Matriarch_Skirmish 에셋 설정:

Transitions 리스트에 항목 1개 추가.

Decision: Decision_Matriarch_SummonCD 에셋 연결.

Next Behavior: Behavior_Matriarch_Summon 에셋 연결.

Behavior_Matriarch_Summon 에셋 설정:

(이 행동은 시전이 끝나면 무조건 Skirmish로 돌아가야 하므로, TimerDecision을 사용)

Transitions 리스트에 항목 1개 추가.

Decision: TimerDecision 에셋 생성 및 연결 (Duration = castTime인 1.5초).

Next Behavior: Behavior_Matriarch_Skirmish 에셋 연결.

4.4. MonsterDataSO 최종 설정

"Mon_Matriarch_Data" 에셋을 열고,

Initial State: Behavior_Matriarch_Patrol 에셋 연결.

Behaviors 리스트: 위에서 설정한 행동 에셋 3개를 모두 추가.